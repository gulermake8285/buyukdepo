// ARSA Token - Complete JavaScript - UPDATED VERSION (Admin Logo Access Removed)

// Complete translation system - ALL TRANSLATIONS + FIXED ERRORS
const translations = {
    en: {
        // Navigation
        'nav.home': 'Home',
        'nav.properties': 'Properties',
        'nav.dashboard': 'Dashboard',
        'nav.admin': 'Admin',
        'nav.about': 'About',
        'nav.connect': 'Connect Wallet',
        
        // Hero section
        'hero.title': 'Invest in Real Estate<br>Through NFTs',
        'hero.subtitle': 'Democratizing real estate investment through blockchain technology. Buy fractionalized NFTs backed by real properties and earn monthly rental income.',
        'hero.start': 'Start Investing',
        'hero.learn': 'Learn More',
        
        // Stats
        'stats.tvl': 'Total Value Locked',
        'stats.investors': 'Active Investors',
        'stats.properties': 'Properties',
        'stats.monthly': 'Monthly Distributions',
        
        // Features
        'features.title': 'Why Choose ARSA Token?',
        'features.subtitle': 'Experience the future of real estate investment',
        
        // Properties
        'properties.title': 'Featured Properties',
        'properties.subtitle': 'Premium real estate opportunities',
        
        // Footer
        'footer.follow': 'Follow ARSA Token',
        
        // Admin Panel - COMPLETE TRANSLATIONS
        'admin.login.title': 'Admin Access',
        'admin.login.subtitle': 'Secure area - Administrator credentials required',
        'admin.login.username': 'Username',
        'admin.login.password': 'Password',
        'admin.login.button': 'Access Admin Panel',
        'admin.login.back': '‚Üê Back to Website',
        'admin.logout': 'üîí Logout',
        'admin.security.indicator': 'üõ°Ô∏è Secure Session Active',
        
        'admin.panel.title': 'üéõÔ∏è Admin Panel',
        'admin.panel.subtitle': 'Manage properties, NFTs, and platform operations',
        
        'admin.property.add.title': 'üè¢ Add New Property',
        'admin.property.add.name': 'Property Title',
        'admin.property.add.location': 'Location',
        'admin.property.add.value': 'Total Property Value (‚Ç¨)',
        'admin.property.add.yield': 'Annual Yield (%)',
        'admin.property.add.nfts': 'Number of NFTs',
        'admin.property.add.description': 'Property Description',
        'admin.property.add.button': 'Add Property',
        
        'admin.stats.title': 'üìä Platform Statistics',
        'admin.stats.properties': 'Total Properties',
        'admin.stats.investors': 'Active Investors',
        'admin.stats.tvl': 'Total Value Locked',
        'admin.stats.nfts': 'NFTs Sold',
        'admin.stats.revenue': 'Monthly Revenue',
        
        'admin.rental.title': 'üí∞ Rental Distribution',
        'admin.rental.amount': 'Monthly Rental Amount (‚Ç¨)',
        'admin.rental.info.title': 'Distribution Info',
        'admin.rental.info.text': 'Rental income will be automatically distributed to all NFT holders proportionally based on their ownership percentage.',
        'admin.rental.button': 'Distribute Rentals',
        
        'admin.users.title': 'üë• User Management',
        'admin.users.recent': 'Recent Transactions',
        'admin.users.rental.received': 'Rental Received',
        'admin.users.rental.monthly': 'Monthly distribution',
        
        'admin.nft.title': 'üé® NFT Management',
        'admin.nft.property': 'Property Selection',
        'admin.nft.price': 'NFT Price (‚Ç¨)',
        'admin.nft.available': 'Available NFTs',
        'admin.nft.pause': 'Pause Sales',
        'admin.nft.update': 'Update Pricing',
        
        'admin.settings.title': '‚öôÔ∏è System Settings',
        'admin.settings.fee': 'Platform Fee (%)',
        'admin.settings.minimum': 'Minimum Investment (‚Ç¨)',
        'admin.settings.token.price': 'ARSA Token Price (‚Ç¨)',
        'admin.settings.warning.title': '‚ö†Ô∏è Important',
        'admin.settings.warning.text': 'Changes to system settings will affect all future transactions. Please verify before saving.',
        'admin.settings.save': 'Save Settings',
        
        // Property Detail Page - COMPLETE TRANSLATIONS
        'property.back': '‚Üê Back to Properties',
        'property.title': 'Downtown Office Complex',
        'property.location': 'üìç Potsdamer Platz 1, Berlin, Germany',
        'property.status.available': 'üü¢ Available for Investment',
        'property.status.verified': '‚úÖ Verified Property',
        
        'property.gallery.title': 'Premium Office Building',
        'property.gallery.subtitle': 'Modern workspace in Berlin\'s financial district',
        
        'property.details.title': 'üìã Property Information',
        'property.details.type': 'Property Type',
        'property.details.type.value': 'Commercial Office Building',
        'property.details.area': 'Total Area',
        'property.details.floors': 'Floors',
        'property.details.floors.value': '8 Floors + Underground Parking',
        'property.details.year': 'Year Built',
        'property.details.year.value': '2019 (Recently Renovated 2023)',
        'property.details.occupancy': 'Occupancy Rate',
        'property.details.occupancy.value': '92% (High Demand Area)',
        'property.details.tenants': 'Current Tenants',
        'property.details.tenants.value': '5 Companies (Tech, Finance, Legal)',
        'property.details.registry': 'Property Registration',
        
        'property.legal.title': 'üìÑ Legal Documents & Verification',
        'property.legal.deed.title': 'Property Title Deed (Grundbuch)',
        'property.legal.deed.desc': 'Official ownership document from Berlin Land Registry',
        'property.legal.permit.title': 'Building Permit & Compliance',
        'property.legal.permit.desc': 'Valid construction permits and safety certificates',
        'property.legal.income.title': 'Rental Income Records',
        'property.legal.income.desc': 'Last 12 months rental income history',
        'property.legal.structure.title': 'Legal Structure & NFT Rights',
        'property.legal.structure.desc': 'How NFT ownership translates to real estate rights',
        'property.legal.view': 'View',
        
        'property.howto.title': 'üí° How It Works (Simple Explanation)',
        'property.howto.step1.title': '1. Real Property:',
        'property.howto.step1.text': 'This is a real office building in Berlin that we legally own. You can visit it, it has real tenants paying real rent.',
        'property.howto.step2.title': '2. Split into 8,500 Pieces:',
        'property.howto.step2.text': 'We divided this ‚Ç¨850,000 building into 8,500 digital pieces (NFTs). Each piece costs ‚Ç¨100.',
        'property.howto.step3.title': '3. You Buy Pieces:',
        'property.howto.step3.text': 'When you buy NFTs, you own that portion of the real building. It\'s like owning shares in a company, but for real estate.',
        'property.howto.step4.title': '4. Earn Rent:',
        'property.howto.step4.text': 'Every month, the building earns ~‚Ç¨51,200 in rent. We split this money among all NFT owners based on how many pieces they own.',
        'property.howto.step5.title': '5. Your Rights:',
        'property.howto.step5.text': 'You have legal ownership rights, voting rights on major decisions, and can sell your NFTs anytime.',
        
        'property.investment.title': 'üèóÔ∏è Investment Opportunity',
        'property.nft.status': 'NFT Sales Status',
        'property.nft.sold': 'Sold',
        'property.nft.available': 'Available',
        'property.nft.progress': 'Funding Progress',
        'property.nft.complete': 'Complete',
        
        'property.trust.verified': 'Property verified by German authorities',
        'property.trust.legal': 'Legal ownership structure established',
        'property.trust.income': '12 months of rental income proven',
        'property.trust.audited': 'Smart contract audited & secure',
        
        'property.stats.value': 'Total Property Value',
        'property.stats.price': 'Price per NFT',
        'property.stats.rent': 'Monthly Rent (Total)',
        'property.stats.yield': 'Annual Yield',
        'property.stats.monthly': 'Monthly Income per NFT',
        
        'property.calc.title': 'üí∞ Investment Calculator',
        'property.calc.nfts': 'NFTs you\'ll own:',
        'property.calc.monthly': 'Monthly income:',
        'property.calc.annual': 'Annual return:',
        'property.calc.total': 'Total investment:',
        
        'property.wallet.connect': 'üîó Connect Wallet',
        'property.wallet.purchase': 'Purchase NFTs',
        'property.wallet.payment': 'üí≥ Payment in ARSA Tokens or ETH',

        // Dashboard Translations - COMPLETE
        'dashboard.title': 'My Portfolio',
        'dashboard.subtitle': 'Track your real estate NFT investments and earnings',
        'dashboard.wallet.required.title': 'Wallet Connection Required',
        'dashboard.wallet.required.text': 'Please connect your wallet to view your portfolio and track your real estate NFT investments.',
        'dashboard.wallet.connect': 'üîó Connect Wallet',
        
        'dashboard.profile.welcome': 'Welcome, Investor!',
        'dashboard.profile.member': 'Member since January 2025',
        'dashboard.profile.edit': '‚úèÔ∏è Edit Profile',
        'dashboard.profile.settings': '‚öôÔ∏è Settings',
        'dashboard.profile.export': 'üìä Export Data',
        
        'dashboard.summary.total.investment': 'Total Investment',
        'dashboard.summary.total.change': '+12.5% this month',
        'dashboard.summary.total.nfts': 'Total NFTs Owned',
        'dashboard.summary.nfts.change': '+5 NFTs this month',
        'dashboard.summary.monthly.income': 'Monthly Income',
        'dashboard.summary.income.change': '+‚Ç¨3.20 from last month',
        
        'dashboard.nft.portfolio.title': 'My NFT Portfolio',
        'dashboard.nft.berlin.office': 'Berlin Office Complex',
        'dashboard.nft.amsterdam.apartment': 'Amsterdam Apartments',
        'dashboard.nft.hamburg.warehouse': 'Hamburg Warehouse',
        'dashboard.nft.investment': 'Investment',
        'dashboard.nft.monthly': 'Monthly',
        'dashboard.nft.view': 'View Details',
        'dashboard.nft.sell': 'Sell NFTs',
        
        'dashboard.income.history.title': 'Recent Income History',
        'dashboard.income.date': 'Date',
        'dashboard.income.property': 'Property',
        'dashboard.income.amount': 'Amount',
        'dashboard.income.nfts': 'NFTs',
        'dashboard.income.status': 'Status',
        'dashboard.income.berlin.office': 'Berlin Office',
        'dashboard.income.amsterdam.apartment': 'Amsterdam Apartments',
        'dashboard.income.hamburg.warehouse': 'Hamburg Warehouse',
        'dashboard.income.all.properties': 'All Properties',
        'dashboard.income.received': 'Received',
        'dashboard.income.pending': 'Pending',
        
        'dashboard.performance.title': 'Portfolio Performance',
        'dashboard.performance.placeholder': 'Portfolio performance chart',
        'dashboard.performance.growth': '+12.5% growth this month',
        
        'dashboard.actions.browse': 'Browse Properties',
        'dashboard.actions.browse.desc': 'Discover new investment opportunities',
        'dashboard.actions.withdraw': 'Withdraw Earnings',
        'dashboard.actions.withdraw.desc': 'Transfer income to your wallet',
        'dashboard.actions.stake': 'Stake ARSA Tokens',
        'dashboard.actions.stake.desc': 'Earn additional rewards',
        'dashboard.actions.referral': 'Refer Friends',
        'dashboard.actions.referral.desc': 'Earn bonus rewards',

        // Properties Page Translations - COMPLETE
        'properties.page.title': 'Investment Properties',
        'properties.page.subtitle': 'Discover premium real estate opportunities across Europe',
        'properties.page.stats.total': '24',
        'properties.page.stats.total.label': 'Total Properties',
        'properties.page.stats.available': '18',
        'properties.page.stats.available.label': 'Available Now',
        'properties.page.stats.value': '‚Ç¨45.2M',
        'properties.page.stats.value.label': 'Total Portfolio Value',
        'properties.page.stats.yield': '7.8%',
        'properties.page.stats.yield.label': 'Average Yield',

        // Search and Filters
        'properties.search.placeholder': 'Search by city, property name, or type...',
        'properties.filter.location': 'Location',
        'properties.filter.all.locations': 'All Locations',
        'properties.filter.type': 'Property Type',
        'properties.filter.all.types': 'All Types',
        'properties.filter.office': 'Office',
        'properties.filter.residential': 'Residential',
        'properties.filter.retail': 'Retail',
        'properties.filter.warehouse': 'Warehouse',
        'properties.filter.hotel': 'Hotel',
        'properties.filter.status': 'Status',
        'properties.filter.all.status': 'All Status',
        'properties.filter.available': 'Available',
        'properties.filter.selling': 'Selling Fast',
        'properties.filter.sold': 'Sold Out',
        'properties.filter.clear': 'Clear All',

        // Results and Sorting
        'properties.results.showing': 'Showing',
        'properties.results.properties': 'properties',
        'properties.sort.newest': 'Newest First',
        'properties.sort.price.low': 'Price: Low to High',
        'properties.sort.price.high': 'Price: High to Low',
        'properties.sort.yield.high': 'Highest Yield',
        'properties.sort.yield.low': 'Lowest Yield',
        'properties.sort.name': 'Name A-Z',

        // Property Types and Status
        'properties.type.office': 'Office',
        'properties.type.residential': 'Residential',
        'properties.type.retail': 'Retail',
        'properties.type.warehouse': 'Warehouse',
        'properties.type.hotel': 'Hotel',
        'properties.status.available': 'Available',
        'properties.status.selling': 'Selling Fast',
        'properties.status.sold': 'Sold Out',

        // Individual Properties
        'properties.berlin.office.title': 'Downtown Office Complex',
        'properties.berlin.office.location': 'üìç Berlin, Germany',
        'properties.amsterdam.apartment.title': 'Luxury Apartment Complex',
        'properties.amsterdam.apartment.location': 'üìç Amsterdam, Netherlands',
        'properties.vienna.retail.title': 'Retail Shopping Center',
        'properties.vienna.retail.location': 'üìç Vienna, Austria',
        'properties.hamburg.warehouse.title': 'Logistics Warehouse Hub',
        'properties.hamburg.warehouse.location': 'üìç Hamburg, Germany',
        'properties.munich.hotel.title': 'Business Hotel Munich',
        'properties.munich.hotel.location': 'üìç Munich, Germany',
        'properties.frankfurt.office.title': 'Financial District Tower',
        'properties.frankfurt.office.location': 'üìç Frankfurt, Germany',
        'properties.zurich.retail.title': 'Premium Shopping District',
        'properties.zurich.retail.location': 'üìç Zurich, Switzerland',
        'properties.london.office.title': 'Canary Wharf Office Tower',
        'properties.london.office.location': 'üìç London, United Kingdom',
        'properties.paris.apartment.title': 'Luxury Paris Residences',
        'properties.paris.apartment.location': 'üìç Paris, France',

        // Property Stats
        'properties.stats.value': 'Total Value',
        'properties.stats.yield': 'Annual Yield',
        'properties.stats.available': 'Available',

        // Investment Summary
        'properties.summary.nft.price': 'NFT Price:',
        'properties.summary.monthly.income': 'Monthly Income/NFT:',
        'properties.summary.min.investment': 'Min. Investment:',
        'properties.summary.status': 'Status:',

        // Property Actions
        'properties.action.view': 'View Details',
        'properties.action.invest': 'Invest Now',
        'properties.action.sold': 'Sold Out',

        // Pagination
        'properties.pagination.previous': 'Previous',
        'properties.pagination.next': 'Next',
        
        // Home page properties section
        'properties.view.all': 'üè¢ View All Properties (24 Available)',
        'properties.view.all.subtitle': 'Explore our complete portfolio of premium real estate investments'
    },
    
    tr: {
        // Navigation
        'nav.home': 'Ana Sayfa',
        'nav.properties': 'Gayrimenkuller',
        'nav.dashboard': 'Hesabƒ±m',
        'nav.admin': 'Y√∂netim',
        'nav.about': 'Hakkƒ±mƒ±zda',
        'nav.connect': 'C√ºzdan Baƒüla',
        
        // Hero section
        'hero.title': 'NFT ile Gayrimenkul<br>Yatƒ±rƒ±mƒ± Yapƒ±n',
        'hero.subtitle': 'Blockchain teknolojisi ile gayrimenkul yatƒ±rƒ±mƒ±nƒ± demokratikle≈ütiriyoruz. Ger√ßek gayrimenkul destekli b√∂l√ºnm√º≈ü NFT\'ler satƒ±n alƒ±n ve aylƒ±k kira geliri kazanƒ±n.',
        'hero.start': 'Yatƒ±rƒ±ma Ba≈üla',
        'hero.learn': 'Daha Fazla Bilgi',
        
        // Stats
        'stats.tvl': 'Toplam Kilitli Deƒüer',
        'stats.investors': 'Aktif Yatƒ±rƒ±mcƒ±',
        'stats.properties': 'Gayrimenkul',
        'stats.monthly': 'Aylƒ±k Daƒüƒ±tƒ±m',
        
        // Features
        'features.title': 'Neden ARSA Token?',
        'features.subtitle': 'Gayrimenkul yatƒ±rƒ±mƒ±nƒ±n geleceƒüini ya≈üayƒ±n',
        
        // Properties
        'properties.title': '√ñne √áƒ±kan Gayrimenkuller',
        'properties.subtitle': 'Premium gayrimenkul fƒ±rsatlarƒ±',
        
        // Footer
        'footer.follow': 'ARSA Token\'ƒ± Takip Edin',
        
        // Admin Panel
        'admin.login.title': 'Y√∂netici Eri≈üimi',
        'admin.login.subtitle': 'G√ºvenli alan - Y√∂netici kimlik bilgileri gerekli',
        'admin.login.username': 'Kullanƒ±cƒ± Adƒ±',
        'admin.login.password': '≈ûifre',
        'admin.login.button': 'Admin Paneline Giri≈ü',
        'admin.login.back': '‚Üê Web Sitesine Geri D√∂n',
        'admin.logout': 'üîí √áƒ±kƒ±≈ü Yap',
        'admin.security.indicator': 'üõ°Ô∏è G√ºvenli Oturum Aktif',
        
        'admin.panel.title': 'üéõÔ∏è Y√∂netici Paneli',
        'admin.panel.subtitle': 'Gayrimenkulleri, NFT\'leri ve platform operasyonlarƒ±nƒ± y√∂netin',
        
        'admin.property.add.title': 'üè¢ Yeni Gayrimenkul Ekle',
        'admin.property.add.name': 'Gayrimenkul Ba≈ülƒ±ƒüƒ±',
        'admin.property.add.location': 'Konum',
        'admin.property.add.value': 'Toplam Gayrimenkul Deƒüeri (‚Ç¨)',
        'admin.property.add.yield': 'Yƒ±llƒ±k Getiri (%)',
        'admin.property.add.nfts': 'NFT Sayƒ±sƒ±',
        'admin.property.add.description': 'Gayrimenkul A√ßƒ±klamasƒ±',
        'admin.property.add.button': 'Gayrimenkul Ekle',
        
        'admin.stats.title': 'üìä Platform ƒ∞statistikleri',
        'admin.stats.properties': 'Toplam Gayrimenkul',
        'admin.stats.investors': 'Aktif Yatƒ±rƒ±mcƒ±lar',
        'admin.stats.tvl': 'Toplam Kilitli Deƒüer',
        'admin.stats.nfts': 'Satƒ±lan NFT\'ler',
        'admin.stats.revenue': 'Aylƒ±k Gelir',
        
        'admin.rental.title': 'üí∞ Kira Daƒüƒ±tƒ±mƒ±',
        'admin.rental.amount': 'Aylƒ±k Kira Tutarƒ± (‚Ç¨)',
        'admin.rental.info.title': 'Daƒüƒ±tƒ±m Bilgisi',
        'admin.rental.info.text': 'Kira geliri, sahiplik y√ºzdesine g√∂re t√ºm NFT sahiplerine otomatik olarak orantƒ±lƒ± ≈üekilde daƒüƒ±tƒ±lacaktƒ±r.',
        'admin.rental.button': 'Kira Daƒüƒ±t',
        
        'admin.users.title': 'üë• Kullanƒ±cƒ± Y√∂netimi',
        'admin.users.recent': 'Son ƒ∞≈ülemler',
        'admin.users.rental.received': 'Kira Alƒ±ndƒ±',
        'admin.users.rental.monthly': 'Aylƒ±k daƒüƒ±tƒ±m',
        
        'admin.nft.title': 'üé® NFT Y√∂netimi',
        'admin.nft.property': 'Gayrimenkul Se√ßimi',
        'admin.nft.price': 'NFT Fiyatƒ± (‚Ç¨)',
        'admin.nft.available': 'Mevcut NFT\'ler',
        'admin.nft.pause': 'Satƒ±≈ülarƒ± Durdur',
        'admin.nft.update': 'Fiyatlandƒ±rmayƒ± G√ºncelle',
        
        'admin.settings.title': '‚öôÔ∏è Sistem Ayarlarƒ±',
        'admin.settings.fee': 'Platform √úcreti (%)',
        'admin.settings.minimum': 'Minimum Yatƒ±rƒ±m (‚Ç¨)',
        'admin.settings.token.price': 'ARSA Token Fiyatƒ± (‚Ç¨)',
        'admin.settings.warning.title': '‚ö†Ô∏è √ñnemli',
        'admin.settings.warning.text': 'Sistem ayarlarƒ±ndaki deƒüi≈üiklikler gelecekteki t√ºm i≈ülemleri etkileyecektir. Kaydetmeden √∂nce l√ºtfen doƒürulayƒ±n.',
        'admin.settings.save': 'Ayarlarƒ± Kaydet',
        
        // Property Detail Page
        'property.back': '‚Üê Gayrimenkullere Geri D√∂n',
        'property.title': '≈ûehir Merkezi Ofis Kompleksi',
        'property.location': 'üìç Potsdamer Platz 1, Berlin, Almanya',
        'property.status.available': 'üü¢ Yatƒ±rƒ±m ƒ∞√ßin Mevcut',
        'property.status.verified': '‚úÖ Doƒürulanmƒ±≈ü Gayrimenkul',
        
        'property.gallery.title': 'Premium Ofis Binasƒ±',
        'property.gallery.subtitle': 'Berlin\'in finans b√∂lgesinde modern √ßalƒ±≈üma alanƒ±',
        
        'property.details.title': 'üìã Gayrimenkul Bilgileri',
        'property.details.type': 'Gayrimenkul T√ºr√º',
        'property.details.type.value': 'Ticari Ofis Binasƒ±',
        'property.details.area': 'Toplam Alan',
        'property.details.floors': 'Kat Sayƒ±sƒ±',
        'property.details.floors.value': '8 Kat + Yeraltƒ± Otoparkƒ±',
        'property.details.year': 'Yapƒ±m Yƒ±lƒ±',
        'property.details.year.value': '2019 (Son Renovasyon 2023)',
        'property.details.occupancy': 'Doluluk Oranƒ±',
        'property.details.occupancy.value': '%92 (Y√ºksek Talep B√∂lgesi)',
        'property.details.tenants': 'Mevcut Kiracƒ±lar',
        'property.details.tenants.value': '5 ≈ûirket (Teknoloji, Finans, Hukuk)',
        'property.details.registry': 'Gayrimenkul Kaydƒ±',
        
        'property.legal.title': 'üìÑ Yasal D√∂k√ºmanlar ve Doƒürulama',
        'property.legal.deed.title': 'Gayrimenkul Tapu Senedi (Grundbuch)',
        'property.legal.deed.desc': 'Berlin Tapu Sicilinden resmi m√ºlkiyet belgesi',
        'property.legal.permit.title': 'Yapƒ± Ruhsatƒ± ve Uygunluk',
        'property.legal.permit.desc': 'Ge√ßerli yapƒ± ruhsatlarƒ± ve g√ºvenlik sertifikalarƒ±',
        'property.legal.income.title': 'Kira Geliri Kayƒ±tlarƒ±',
        'property.legal.income.desc': 'Son 12 aylƒ±k kira geliri ge√ßmi≈üi',
        'property.legal.structure.title': 'Yasal Yapƒ± ve NFT Haklarƒ±',
        'property.legal.structure.desc': 'NFT sahipliƒüinin gayrimenkul haklarƒ±na nasƒ±l d√∂n√º≈üt√ºƒü√º',
        'property.legal.view': 'G√∂r√ºnt√ºle',
        
        'property.howto.title': 'üí° Nasƒ±l √áalƒ±≈üƒ±r (Basit A√ßƒ±klama)',
        'property.howto.step1.title': '1. Ger√ßek Gayrimenkul:',
        'property.howto.step1.text': 'Bu, Berlin\'de yasal olarak sahip olduƒüumuz ger√ßek bir ofis binasƒ±dƒ±r. Ziyaret edebilirsiniz, ger√ßek kira √∂deyen kiracƒ±larƒ± vardƒ±r.',
        'property.howto.step2.title': '2. 8.500 Par√ßaya B√∂l√ºnm√º≈ü:',
        'property.howto.step2.text': 'Bu ‚Ç¨850.000 deƒüerindeki binayƒ± 8.500 dijital par√ßaya (NFT) b√∂ld√ºk. Her par√ßa ‚Ç¨100 maliyetinde.',
        'property.howto.step3.title': '3. Par√ßa Satƒ±n Alƒ±rsƒ±nƒ±z:',
        'property.howto.step3.text': 'NFT satƒ±n aldƒ±ƒüƒ±nƒ±zda, ger√ßek binanƒ±n o kƒ±smƒ±na sahip olursunuz. Bir ≈üirkette hisse sahibi olmak gibi, ama gayrimenkul i√ßin.',
        'property.howto.step4.title': '4. Kira Kazanƒ±rsƒ±nƒ±z:',
        'property.howto.step4.text': 'Her ay bina yakla≈üƒ±k ‚Ç¨51.200 kira kazanƒ±r. Bu parayƒ± sahip olduƒüunuz par√ßa sayƒ±sƒ±na g√∂re t√ºm NFT sahipleri arasƒ±nda payla≈ütƒ±rƒ±rƒ±z.',
        'property.howto.step5.title': '5. Haklarƒ±nƒ±z:',
        'property.howto.step5.text': 'Yasal sahiplik haklarƒ±nƒ±z, √∂nemli kararlarda oy haklarƒ±nƒ±z ve NFT\'lerinizi istediƒüiniz zaman satabilme hakkƒ±nƒ±z vardƒ±r.',
        
        'property.investment.title': 'üèóÔ∏è Yatƒ±rƒ±m Fƒ±rsatƒ±',
        'property.nft.status': 'NFT Satƒ±≈ü Durumu',
        'property.nft.sold': 'Satƒ±lan',
        'property.nft.available': 'Mevcut',
        'property.nft.progress': 'Fonlama ƒ∞lerlemesi',
        'property.nft.complete': 'Tamamlandƒ±',
        
        'property.trust.verified': 'Gayrimenkul Alman makamlarƒ± tarafƒ±ndan doƒürulandƒ±',
        'property.trust.legal': 'Yasal sahiplik yapƒ±sƒ± kuruldu',
        'property.trust.income': '12 aylƒ±k kira geliri kanƒ±tlandƒ±',
        'property.trust.audited': 'Akƒ±llƒ± s√∂zle≈üme denetlendi ve g√ºvenli',
        
        'property.stats.value': 'Toplam Gayrimenkul Deƒüeri',
        'property.stats.price': 'NFT Ba≈üƒ±na Fiyat',
        'property.stats.rent': 'Aylƒ±k Kira (Toplam)',
        'property.stats.yield': 'Yƒ±llƒ±k Getiri',
        'property.stats.monthly': 'NFT Ba≈üƒ±na Aylƒ±k Gelir',
        
        'property.calc.title': 'üí∞ Yatƒ±rƒ±m Hesaplayƒ±cƒ±sƒ±',
        'property.calc.nfts': 'Sahip olacaƒüƒ±nƒ±z NFT\'ler:',
        'property.calc.monthly': 'Aylƒ±k gelir:',
        'property.calc.annual': 'Yƒ±llƒ±k getiri:',
        'property.calc.total': 'Toplam yatƒ±rƒ±m:',
        
        'property.wallet.connect': 'üîó C√ºzdan Baƒüla',
        'property.wallet.purchase': 'NFT Satƒ±n Al',
        'property.wallet.payment': 'üí≥ ARSA Token veya ETH ile √∂deme',

        // Dashboard Translations
        'dashboard.title': 'Portf√∂y√ºm',
        'dashboard.subtitle': 'Gayrimenkul NFT yatƒ±rƒ±mlarƒ±nƒ±zƒ± ve kazan√ßlarƒ±nƒ±zƒ± takip edin',
        'dashboard.wallet.required.title': 'C√ºzdan Baƒülantƒ±sƒ± Gerekli',
        'dashboard.wallet.required.text': 'Portf√∂y√ºn√ºz√º g√∂r√ºnt√ºlemek ve gayrimenkul NFT yatƒ±rƒ±mlarƒ±nƒ±zƒ± takip etmek i√ßin l√ºtfen c√ºzdanƒ±nƒ±zƒ± baƒülayƒ±n.',
        'dashboard.wallet.connect': 'üîó C√ºzdan Baƒüla',
        
        'dashboard.profile.welcome': 'Ho≈ü geldiniz, Yatƒ±rƒ±mcƒ±!',
        'dashboard.profile.member': '√úye olma tarihi: Ocak 2025',
        'dashboard.profile.edit': '‚úèÔ∏è Profili D√ºzenle',
        'dashboard.profile.settings': '‚öôÔ∏è Ayarlar',
        'dashboard.profile.export': 'üìä Veri Dƒ±≈üa Aktar',
        
        'dashboard.summary.total.investment': 'Toplam Yatƒ±rƒ±m',
        'dashboard.summary.total.change': 'Bu ay +%12.5',
        'dashboard.summary.total.nfts': 'Toplam NFT Sayƒ±sƒ±',
        'dashboard.summary.nfts.change': 'Bu ay +5 NFT',
        'dashboard.summary.monthly.income': 'Aylƒ±k Gelir',
        'dashboard.summary.income.change': 'Ge√ßen aydan +‚Ç¨3.20',
        
        'dashboard.nft.portfolio.title': 'NFT Portf√∂y√ºm',
        'dashboard.nft.berlin.office': 'Berlin Ofis Kompleksi',
        'dashboard.nft.amsterdam.apartment': 'Amsterdam Apartmanlarƒ±',
        'dashboard.nft.hamburg.warehouse': 'Hamburg Depo',
        'dashboard.nft.investment': 'Yatƒ±rƒ±m',
        'dashboard.nft.monthly': 'Aylƒ±k',
        'dashboard.nft.view': 'Detaylarƒ± G√∂r√ºnt√ºle',
        'dashboard.nft.sell': 'NFT Sat',
        
        'dashboard.income.history.title': 'Son Gelir Ge√ßmi≈üi',
        'dashboard.income.date': 'Tarih',
        'dashboard.income.property': 'Gayrimenkul',
        'dashboard.income.amount': 'Tutar',
        'dashboard.income.nfts': 'NFT\'ler',
        'dashboard.income.status': 'Durum',
        'dashboard.income.berlin.office': 'Berlin Ofis',
        'dashboard.income.amsterdam.apartment': 'Amsterdam Apartmanlarƒ±',
        'dashboard.income.hamburg.warehouse': 'Hamburg Depo',
        'dashboard.income.all.properties': 'T√ºm Gayrimenkuller',
        'dashboard.income.received': 'Alƒ±ndƒ±',
        'dashboard.income.pending': 'Beklemede',
        
        'dashboard.performance.title': 'Portf√∂y Performansƒ±',
        'dashboard.performance.placeholder': 'Portf√∂y performans grafiƒüi',
        'dashboard.performance.growth': 'Bu ay +%12.5 b√ºy√ºme',
        
        'dashboard.actions.browse': 'Gayrimenkulleri ƒ∞ncele',
        'dashboard.actions.browse.desc': 'Yeni yatƒ±rƒ±m fƒ±rsatlarƒ±nƒ± ke≈üfet',
        'dashboard.actions.withdraw': 'Kazan√ß √áek',
        'dashboard.actions.withdraw.desc': 'Geliri c√ºzdanƒ±nƒ±za transfer edin',
        'dashboard.actions.stake': 'ARSA Token Stake Et',
        'dashboard.actions.stake.desc': 'Ek √∂d√ºller kazanƒ±n',
        'dashboard.actions.referral': 'Arkada≈ü Davet Et',
        'dashboard.actions.referral.desc': 'Bonus √∂d√ºller kazanƒ±n',

        // Properties Page Translations
        'properties.page.title': 'Yatƒ±rƒ±m Gayrimenkulleri',
        'properties.page.subtitle': 'Avrupa\'da premium gayrimenkul fƒ±rsatlarƒ±nƒ± ke≈üfedin',
        'properties.page.stats.total': '24',
        'properties.page.stats.total.label': 'Toplam Gayrimenkul',
        'properties.page.stats.available': '18',
        'properties.page.stats.available.label': '≈ûimdi Mevcut',
        'properties.page.stats.value': '‚Ç¨45.2M',
        'properties.page.stats.value.label': 'Toplam Portf√∂y Deƒüeri',
        'properties.page.stats.yield': '%7.8',
        'properties.page.stats.yield.label': 'Ortalama Getiri',

        // Search and Filters
        'properties.search.placeholder': '≈ûehir, emlak adƒ± veya t√ºre g√∂re arayƒ±n...',
        'properties.filter.location': 'Konum',
        'properties.filter.all.locations': 'T√ºm Konumlar',
        'properties.filter.type': 'Gayrimenkul T√ºr√º',
        'properties.filter.all.types': 'T√ºm T√ºrler',
        'properties.filter.office': 'Ofis',
        'properties.filter.residential': 'Konut',
        'properties.filter.retail': 'Ticari',
        'properties.filter.warehouse': 'Depo',
        'properties.filter.hotel': 'Otel',
        'properties.filter.status': 'Durum',
        'properties.filter.all.status': 'T√ºm Durumlar',
        'properties.filter.available': 'Mevcut',
        'properties.filter.selling': 'Hƒ±zla Satƒ±yor',
        'properties.filter.sold': 'T√ºkendi',
        'properties.filter.clear': 'T√ºm√ºn√º Temizle',

        // Results and Sorting
        'properties.results.showing': 'G√∂steriliyor',
        'properties.results.properties': 'gayrimenkul',
        'properties.sort.newest': 'En Yeni √ñnce',
        'properties.sort.price.low': 'Fiyat: D√º≈ü√ºkten Y√ºkseƒüe',
        'properties.sort.price.high': 'Fiyat: Y√ºksekten D√º≈ü√ºƒüe',
        'properties.sort.yield.high': 'En Y√ºksek Getiri',
        'properties.sort.yield.low': 'En D√º≈ü√ºk Getiri',
        'properties.sort.name': 'ƒ∞sim A-Z',

        // Property Types and Status
        'properties.type.office': 'Ofis',
        'properties.type.residential': 'Konut',
        'properties.type.retail': 'Ticari',
        'properties.type.warehouse': 'Depo',
        'properties.type.hotel': 'Otel',
        'properties.status.available': 'Mevcut',
        'properties.status.selling': 'Hƒ±zla Satƒ±yor',
        'properties.status.sold': 'T√ºkendi',

        // Individual Properties
        'properties.berlin.office.title': '≈ûehir Merkezi Ofis Kompleksi',
        'properties.berlin.office.location': 'üìç Berlin, Almanya',
        'properties.amsterdam.apartment.title': 'L√ºks Apartman Kompleksi',
        'properties.amsterdam.apartment.location': 'üìç Amsterdam, Hollanda',
        'properties.vienna.retail.title': 'Ticari Alƒ±≈üveri≈ü Merkezi',
        'properties.vienna.retail.location': 'üìç Viyana, Avusturya',
        'properties.hamburg.warehouse.title': 'Lojistik Depo Merkezi',
        'properties.hamburg.warehouse.location': 'üìç Hamburg, Almanya',
        'properties.munich.hotel.title': 'ƒ∞≈ü Oteli M√ºnih',
        'properties.munich.hotel.location': 'üìç M√ºnih, Almanya',
        'properties.frankfurt.office.title': 'Finans B√∂lgesi Kulesi',
        'properties.frankfurt.office.location': 'üìç Frankfurt, Almanya',
        'properties.zurich.retail.title': 'Premium Alƒ±≈üveri≈ü B√∂lgesi',
        'properties.zurich.retail.location': 'üìç Z√ºrih, ƒ∞svi√ßre',
        'properties.london.office.title': 'Canary Wharf Ofis Kulesi',
        'properties.london.office.location': 'üìç Londra, ƒ∞ngiltere',
        'properties.paris.apartment.title': 'L√ºks Paris Rezidanslarƒ±',
        'properties.paris.apartment.location': 'üìç Paris, Fransa',

        // Property Stats
        'properties.stats.value': 'Toplam Deƒüer',
        'properties.stats.yield': 'Yƒ±llƒ±k Getiri',
        'properties.stats.available': 'Mevcut',

        // Investment Summary
        'properties.summary.nft.price': 'NFT Fiyatƒ±:',
        'properties.summary.monthly.income': 'Aylƒ±k Gelir/NFT:',
        'properties.summary.min.investment': 'Min. Yatƒ±rƒ±m:',
        'properties.summary.status': 'Durum:',

        // Property Actions
        'properties.action.view': 'Detaylarƒ± G√∂r√ºnt√ºle',
        'properties.action.invest': '≈ûimdi Yatƒ±rƒ±m Yap',
        'properties.action.sold': 'T√ºkendi',

        // Pagination
        'properties.pagination.previous': '√ñnceki',
        'properties.pagination.next': 'Sonraki',
        
        // Home page properties section
        'properties.view.all': 'üè¢ T√ºm Emlaklarƒ± G√∂r (24 Mevcut)',
        'properties.view.all.subtitle': 'Premium gayrimenkul yatƒ±rƒ±mlarƒ±nƒ±n tam portf√∂y√ºm√ºz√º ke≈üfedin'
    },
    
    ar: {
        // Navigation
        'nav.home': 'ÿßŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©',
        'nav.properties': 'ÿßŸÑÿπŸÇÿßÿ±ÿßÿ™',
        'nav.dashboard': 'ŸÑŸàÿ≠ÿ© ÿßŸÑÿ™ÿ≠ŸÉŸÖ',
        'nav.admin': 'ÿßŸÑÿ•ÿØÿßÿ±ÿ©',
        'nav.about': 'ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿπŸÜÿß',
        'nav.connect': 'ÿ±ÿ®ÿ∑ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©'
        // ... rest of Arabic translations ...
    }
};

// Current language - GLOBAL VARIABLE
let currentLanguage = 'en';

// SAFE LOCAL STORAGE FUNCTION - FIXED
function safeLocalStorage(action, key, value = null) {
    try {
        if (typeof localStorage !== 'undefined') {
            if (action === 'get') {
                return localStorage.getItem(key);
            } else if (action === 'set') {
                localStorage.setItem(key, value);
                return true;
            } else if (action === 'remove') {
                localStorage.removeItem(key);
                return true;
            }
        }
    } catch (error) {
        console.warn('LocalStorage not available, using sessionStorage:', error);
        // Fallback to sessionStorage
        try {
            if (action === 'get') {
                return sessionStorage.getItem(key);
            } else if (action === 'set') {
                sessionStorage.setItem(key, value);
                return true;
            } else if (action === 'remove') {
                sessionStorage.removeItem(key);
                return true;
            }
        } catch (sessionError) {
            console.warn('SessionStorage also not available:', sessionError);
            return null;
        }
    }
    return null;
}

// MAIN TRANSLATION FUNCTION - FIXED
function translatePage(language) {
    console.log('üîÑ Translating to:', language);
    
    currentLanguage = language;
    const elements = document.querySelectorAll('[data-translate]');
    
    console.log('üìù Found elements to translate:', elements.length);
    
    elements.forEach(element => {
        const key = element.getAttribute('data-translate');
        if (translations[language] && translations[language][key]) {
            // Handle elements with HTML content (like <br> tags)
            if (element.innerHTML.includes('<br>') || key.includes('title')) {
                element.innerHTML = translations[language][key];
            } else {
                element.textContent = translations[language][key];
            }
            console.log('‚úÖ Translated:', key);
        } else {
            console.log('‚ùå Missing translation:', key, 'for language:', language);
        }
    });

    // Handle placeholder attributes - FIXED
    const placeholderElements = document.querySelectorAll('[data-translate-placeholder]');
    placeholderElements.forEach(element => {
        const key = element.getAttribute('data-translate-placeholder');
        if (translations[language] && translations[language][key]) {
            element.placeholder = translations[language][key];
        }
    });

    // Set text direction for Arabic - IMPROVED
    if (language === 'ar') {
        document.documentElement.setAttribute('dir', 'rtl');
        document.documentElement.style.fontFamily = 'Tahoma, Arial, sans-serif';
        document.body.style.textAlign = 'right';
    } else {
        document.documentElement.setAttribute('dir', 'ltr');
        document.documentElement.style.fontFamily = "'Inter', -apple-system, BlinkMacSystemFont, sans-serif";
        document.body.style.textAlign = 'left';
    }

    // Update ALL language selectors - FIXED
    const languageSelectors = document.querySelectorAll('.language-dropdown, #languageSelect, #loginLanguageSelect');
    languageSelectors.forEach(selector => {
        if (selector && selector.value !== language) {
            selector.value = language;
        }
    });

    // Store language preference - SAFE
    safeLocalStorage('set', 'preferred_language', language);
    
    console.log('‚úÖ Translation completed for:', language);
}

// Initialize language on page load - IMPROVED
function initializeLanguage() {
    let savedLanguage = 'en';
    
    // Try to get saved language safely
    const stored = safeLocalStorage('get', 'preferred_language');
    if (stored) {
        savedLanguage = stored;
    }
    
    console.log('üöÄ Initializing language:', savedLanguage);
    translatePage(savedLanguage);
}

// Mobile menu toggle - NEW FEATURE
function toggleMobileMenu() {
    const navLinks = document.querySelector('.nav-links');
    const mobileBtn = document.querySelector('.mobile-menu-btn');
    
    if (navLinks && mobileBtn) {
        navLinks.classList.toggle('active');
        mobileBtn.textContent = navLinks.classList.contains('active') ? '‚úï' : '‚ò∞';
    }
}

// Scroll to properties section
function scrollToProperties() {
    const propertiesSection = document.getElementById('properties');
    if (propertiesSection) {
        propertiesSection.scrollIntoView({ behavior: 'smooth' });
    } else {
        // Redirect to properties page if section doesn't exist
        window.location.href = 'properties.html';
    }
}

// Open property detail page
function openPropertyDetail() {
    window.location.href = 'property-detail.html';
}

// Wallet connection simulation - IMPROVED
let walletConnected = false;

function connectWallet() {
    const walletBtn = document.querySelector('.connect-wallet');
    if (!walletBtn) return;
    
    if (!walletConnected) {
        const connectingTexts = {
            en: 'Connecting...',
            tr: 'Baƒülanƒ±yor...',
            ar: 'ÿ¨ÿßÿ±Ÿä ÿßŸÑÿßÿ™ÿµÿßŸÑ...'
        };
        
        const originalText = walletBtn.textContent;
        walletBtn.textContent = connectingTexts[currentLanguage] || connectingTexts.en;
        walletBtn.disabled = true;
        
        // Add loading spinner
        walletBtn.innerHTML = '<span class="spinner"></span>' + (connectingTexts[currentLanguage] || connectingTexts.en);
        
        // Simulate wallet connection
        setTimeout(() => {
            walletConnected = true;
            
            const connectedTexts = {
                en: '‚úÖ Connected',
                tr: '‚úÖ Baƒülandƒ±',
                ar: '‚úÖ ŸÖÿ™ÿµŸÑ'
            };
            
            walletBtn.innerHTML = connectedTexts[currentLanguage] || connectedTexts.en;
            walletBtn.style.background = 'rgba(16, 185, 129, 0.8)';
            walletBtn.disabled = false;
            
            // Store connection status
            safeLocalStorage('set', 'wallet_connected', 'true');
            safeLocalStorage('set', 'wallet_address', '0x1234567890abcdef1234567890abcdef12345678');
            
            // Show wallet address after a moment
            setTimeout(() => {
                walletBtn.textContent = '0x1234...5678';
            }, 1000);
            
            // Show success message
            const successTexts = {
                en: 'üéâ Wallet connected successfully!',
                tr: 'üéâ C√ºzdan ba≈üarƒ±yla baƒülandƒ±!',
                ar: 'üéâ ÿ™ŸÖ ÿ±ÿ®ÿ∑ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ© ÿ®ŸÜÿ¨ÿßÿ≠!'
            };
            
            showNotification(successTexts[currentLanguage] || successTexts.en, 'success');
            
        }, 2000);
    } else {
        // Disconnect option
        const disconnectTexts = {
            en: 'Disconnect wallet?',
            tr: 'C√ºzdan baƒülantƒ±sƒ±nƒ± kes?',
            ar: 'ŸÇÿ∑ÿπ ÿßÿ™ÿµÿßŸÑ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©ÿü'
        };
        
        if (confirm(disconnectTexts[currentLanguage] || disconnectTexts.en)) {
            walletConnected = false;
            
            const connectTexts = {
                en: 'Connect Wallet',
                tr: 'C√ºzdan Baƒüla',
                ar: 'ÿ±ÿ®ÿ∑ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©'
            };
            
            walletBtn.textContent = connectTexts[currentLanguage] || connectTexts.en;
            walletBtn.style.background = 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
            
            // Clear connection status
            safeLocalStorage('remove', 'wallet_connected');
            safeLocalStorage('remove', 'wallet_address');
        }
    }
}

// Notification system - NEW
function showNotification(message, type = 'info') {
    // Remove existing notifications
    const existing = document.querySelector('.notification');
    if (existing) {
        existing.remove();
    }
    
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.style.cssText = `
        position: fixed;
        top: 100px;
        right: 20px;
        background: ${type === 'success' ? 'rgba(16, 185, 129, 0.2)' : 
                     type === 'error' ? 'rgba(239, 68, 68, 0.2)' : 'rgba(102, 126, 234, 0.2)'};
        border: 1px solid ${type === 'success' ? '#10b981' : 
                           type === 'error' ? '#ef4444' : '#667eea'};
        color: ${type === 'success' ? '#10b981' : 
                type === 'error' ? '#ef4444' : '#667eea'};
        padding: 1rem 1.5rem;
        border-radius: 10px;
        z-index: 10000;
        font-weight: 600;
        max-width: 300px;
        animation: slideIn 0.3s ease;
    `;
    
    notification.textContent = message;
    document.body.appendChild(notification);
    
    // Auto remove after 5 seconds
    setTimeout(() => {
        if (document.body.contains(notification)) {
            notification.style.animation = 'slideOut 0.3s ease';
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 300);
        }
    }, 5000);
}

// Form validation - NEW
function validateInput(input, type) {
    const value = input.value.trim();
    
    switch(type) {
        case 'email':
            return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(value);
        case 'number':
            return !isNaN(value) && parseFloat(value) > 0;
        case 'wallet':
            return /^0x[a-fA-F0-9]{40}$/.test(value);
        case 'required':
            return value.length > 0;
        case 'url':
            try {
                new URL(value);
                return true;
            } catch {
                return false;
            }
        default:
            return value.length > 0;
    }
}

// HTML escape for security - NEW
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// Admin functions - IMPROVED
function addNewProperty() {
    const title = document.getElementById('propertyTitle')?.value?.trim();
    const location = document.getElementById('propertyLocation')?.value?.trim();
    const value = document.getElementById('propertyValue')?.value?.trim();
    const yield_ = document.getElementById('propertyYield')?.value?.trim();
    const nfts = document.getElementById('propertyNFTs')?.value?.trim();
    const description = document.getElementById('propertyDescription')?.value?.trim();
    
    // Validation
    if (!title || !location || !value || !yield_ || !nfts) {
        const errorMessages = {
            en: 'Please fill all required fields!',
            tr: 'L√ºtfen t√ºm gerekli alanlarƒ± doldurun!',
            ar: 'Ÿäÿ±ÿ¨Ÿâ ŸÖŸÑÿ° ÿ¨ŸÖŸäÿπ ÿßŸÑÿ≠ŸÇŸàŸÑ ÿßŸÑŸÖÿ∑ŸÑŸàÿ®ÿ©!'
        };
        
        showNotification(errorMessages[currentLanguage] || errorMessages.en, 'error');
        return;
    }
    
    // Validate numbers
    if (!validateInput({value: value}, 'number') || 
        !validateInput({value: yield_}, 'number') || 
        !validateInput({value: nfts}, 'number')) {
        const errorMessages = {
            en: 'Please enter valid numbers for value, yield, and NFT count!',
            tr: 'L√ºtfen deƒüer, getiri ve NFT sayƒ±sƒ± i√ßin ge√ßerli sayƒ±lar girin!',
            ar: 'Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿ£ÿ±ŸÇÿßŸÖ ÿµÿ≠Ÿäÿ≠ÿ© ŸÑŸÑŸÇŸäŸÖÿ© ŸàÿßŸÑÿπÿßÿ¶ÿØ ŸàÿπÿØÿØ ÿßŸÑÿ±ŸÖŸàÿ≤!'
        };
        
        showNotification(errorMessages[currentLanguage] || errorMessages.en, 'error');
        return;
    }
    
    const successMessages = {
        en: `Property Added Successfully!\n\nTitle: ${escapeHtml(title)}\nLocation: ${escapeHtml(location)}\nValue: ‚Ç¨${escapeHtml(value)}\nYield: ${escapeHtml(yield_)}%\nNFTs: ${escapeHtml(nfts)}`,
        tr: `Gayrimenkul Ba≈üarƒ±yla Eklendi!\n\nBa≈ülƒ±k: ${escapeHtml(title)}\nKonum: ${escapeHtml(location)}\nDeƒüer: ‚Ç¨${escapeHtml(value)}\nGetiri: %${escapeHtml(yield_)}\nNFT'ler: ${escapeHtml(nfts)}`,
        ar: `ÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ© ÿßŸÑÿπŸÇÿßÿ± ÿ®ŸÜÿ¨ÿßÿ≠!\n\nÿßŸÑÿπŸÜŸàÿßŸÜ: ${escapeHtml(title)}\nÿßŸÑŸÖŸàŸÇÿπ: ${escapeHtml(location)}\nÿßŸÑŸÇŸäŸÖÿ©: ‚Ç¨${escapeHtml(value)}\nÿßŸÑÿπÿßÿ¶ÿØ: ${escapeHtml(yield_)}%\nÿßŸÑÿ±ŸÖŸàÿ≤: ${escapeHtml(nfts)}`
    };
    
    alert(successMessages[currentLanguage] || successMessages.en);
    
    // Clear form
    const form = document.getElementById('addPropertyForm');
    if (form) {
        form.reset();
    }
    
    showNotification('Property added successfully!', 'success');
}

function distributeRentals() {
    const amountInput = document.getElementById('rentalAmount');
    if (!amountInput) return;
    
    const amount = amountInput.value.trim();
    
    if (!amount || !validateInput({value: amount}, 'number')) {
        const errorMessages = {
            en: 'Please enter a valid rental amount!',
            tr: 'L√ºtfen ge√ßerli bir kira tutarƒ± girin!',
            ar: 'Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ŸÖÿ®ŸÑÿ∫ ÿ•Ÿäÿ¨ÿßÿ± ÿµÿ≠Ÿäÿ≠!'
        };
        
        showNotification(errorMessages[currentLanguage] || errorMessages.en, 'error');
        return;
    }
    
    const successMessages = {
        en: `Rental Distribution Initiated!\n\nAmount: ‚Ç¨${escapeHtml(amount)}\nThis will be distributed to all NFT holders proportionally.`,
        tr: `Kira Daƒüƒ±tƒ±mƒ± Ba≈ülatƒ±ldƒ±!\n\nTutar: ‚Ç¨${escapeHtml(amount)}\nBu tutar t√ºm NFT sahiplerine orantƒ±lƒ± olarak daƒüƒ±tƒ±lacak.`,
        ar: `ÿ™ŸÖ ÿ®ÿØÿ° ÿ™Ÿàÿ≤Ÿäÿπ ÿßŸÑÿ•Ÿäÿ¨ÿßÿ±!\n\nÿßŸÑŸÖÿ®ŸÑÿ∫: ‚Ç¨${escapeHtml(amount)}\nÿ≥Ÿäÿ™ŸÖ ÿ™Ÿàÿ≤Ÿäÿπ Ÿáÿ∞ÿß ÿπŸÑŸâ ÿ¨ŸÖŸäÿπ ÿ≠ÿßŸÖŸÑŸä ÿßŸÑÿ±ŸÖŸàÿ≤ ÿ®ÿ¥ŸÉŸÑ ŸÖÿ™ŸÜÿßÿ≥ÿ®.`
    };
    
    alert(successMessages[currentLanguage] || successMessages.en);
    amountInput.value = '';
    
    showNotification('Rental distribution initiated!', 'success');
}

// Investment calculator (for property detail page) - IMPROVED
function updateInvestmentSummary() {
    const amountInput = document.getElementById('investmentAmount');
    if (!amountInput) return;
    
    const amount = parseFloat(amountInput.value) || 0;
    const nftPrice = 100;
    const nftCount = Math.floor(amount / nftPrice);
    const monthlyIncomePerNFT = 0.60;
    
    const elements = {
        nftCount: document.getElementById('nftCount'),
        monthlyIncome: document.getElementById('monthlyIncome'),
        annualReturn: document.getElementById('annualReturn'),
        totalCost: document.getElementById('totalCost')
    };
    
    if (elements.nftCount) elements.nftCount.textContent = nftCount;
    if (elements.monthlyIncome) elements.monthlyIncome.textContent = `‚Ç¨${(nftCount * monthlyIncomePerNFT).toFixed(2)}`;
    if (elements.annualReturn) elements.annualReturn.textContent = `‚Ç¨${(nftCount * monthlyIncomePerNFT * 12).toFixed(2)}`;
    if (elements.totalCost) elements.totalCost.textContent = `‚Ç¨${(nftCount * nftPrice).toFixed(0)}`;
    
    // Update actual investment amount to match whole NFTs
    amountInput.value = nftCount * nftPrice;
}

function setAmount(amount) {
    const amountInput = document.getElementById('investmentAmount');
    if (amountInput) {
        amountInput.value = amount;
        updateInvestmentSummary();
    }
}

// Check wallet connection status on page load - NEW
function checkWalletConnection() {
    const isConnected = safeLocalStorage('get', 'wallet_connected') === 'true';
    const address = safeLocalStorage('get', 'wallet_address');
    
    if (isConnected && address) {
        walletConnected = true;
        const walletBtn = document.querySelector('.connect-wallet');
        if (walletBtn) {
            const shortAddress = address.substring(0, 6) + '...' + address.substring(address.length - 4);
            walletBtn.textContent = shortAddress;
            walletBtn.style.background = 'rgba(16, 185, 129, 0.8)';
        }
    }
}

// Newsletter form - IMPROVED
function setupNewsletterForm() {
    const newsletterForm = document.getElementById('newsletterForm');
    if (newsletterForm) {
        newsletterForm.addEventListener('submit', function(e) {
            e.preventDefault();
            const emailInput = this.querySelector('.newsletter-input');
            const email = emailInput.value.trim();
            
            // Email validation
            if (typeof validateInput === 'function') {
                if (!validateInput({value: email}, 'email')) {
                    if (typeof showNotification === 'function') {
                        showNotification('Please enter a valid email address', 'error');
                    } else {
                        alert('Please enter a valid email address');
                    }
                    return;
                }
            }
            
            // Show loading state
            const submitBtn = this.querySelector('.newsletter-btn');
            const originalText = submitBtn.textContent;
            submitBtn.textContent = 'Subscribing...';
            submitBtn.disabled = true;
            
            // Simulate API call
            setTimeout(() => {
                const successMessages = {
                    en: `Thank you for subscribing! You'll receive updates about new investment opportunities at ${email}`,
                    tr: `Abone olduƒüunuz i√ßin te≈üekk√ºrler! ${email} adresine yeni yatƒ±rƒ±m fƒ±rsatlarƒ± hakkƒ±nda g√ºncellemeler alacaksƒ±nƒ±z`,
                    ar: `ÿ¥ŸÉÿ±ÿßŸã ŸÑŸÉ ÿπŸÑŸâ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉ! ÿ≥ÿ™ÿ™ŸÑŸÇŸâ ÿ™ÿ≠ÿØŸäÿ´ÿßÿ™ ÿ≠ŸàŸÑ ŸÅÿ±ÿµ ÿßŸÑÿßÿ≥ÿ™ÿ´ŸÖÿßÿ± ÿßŸÑÿ¨ÿØŸäÿØÿ© ÿπŸÑŸâ ${email}`
                };
                
                const message = successMessages[currentLanguage] || successMessages.en;
                
                if (typeof showNotification === 'function') {
                    showNotification('Successfully subscribed to newsletter!', 'success');
                } else {
                    alert(message);
                }
                
                // Reset form
                this.reset();
                submitBtn.textContent = originalText;
                submitBtn.disabled = false;
                
                // Store subscription in local storage for demo
                if (typeof safeLocalStorage === 'function') {
                    const subscriptions = JSON.parse(safeLocalStorage('get', 'newsletter_subscriptions') || '[]');
                    subscriptions.push({
                        email: email,
                        date: new Date().toISOString(),
                        language: currentLanguage
                    });
                    safeLocalStorage('set', 'newsletter_subscriptions', JSON.stringify(subscriptions));
                }
            }, 2000);
        });
    }
}

// MAIN INITIALIZATION FUNCTION - IMPROVED (WITHOUT LOGO ADMIN ACCESS)
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ ARSA Token JavaScript Starting...');
    
    // Initialize language FIRST
    initializeLanguage();
    
    // Check wallet connection
    checkWalletConnection();
    
    // Setup mobile menu
    const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
    if (mobileMenuBtn) {
        mobileMenuBtn.addEventListener('click', toggleMobileMenu);
    }
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', function(e) {
        const navLinks = document.querySelector('.nav-links');
        const mobileBtn = document.querySelector('.mobile-menu-btn');
        
        if (navLinks && navLinks.classList.contains('active') && 
            !navLinks.contains(e.target) && 
            !mobileBtn.contains(e.target)) {
            navLinks.classList.remove('active');
            if (mobileBtn) mobileBtn.textContent = '‚ò∞';
        }
    });
    
    // Setup ALL language selectors with proper event listeners
    const languageSelectors = document.querySelectorAll('.language-dropdown, #languageSelect, #loginLanguageSelect');
    console.log('üîß Found language selectors:', languageSelectors.length);
    
    languageSelectors.forEach((selector, index) => {
        if (selector) {
            console.log(`üîß Setting up selector ${index + 1}:`, selector.id || selector.className);
            
            // Remove existing listeners to avoid duplicates
            const newSelector = selector.cloneNode(true);
            selector.parentNode.replaceChild(newSelector, selector);
            
            // Add new listener
            newSelector.addEventListener('change', handleLanguageChange);
            
            // Set initial value
            newSelector.value = currentLanguage;
        }
    });
    
    // Language change handler - IMPROVED
    function handleLanguageChange(e) {
        console.log('üîÑ Language selector changed to:', e.target.value);
        const newLanguage = e.target.value;
        
        // Translate page
        translatePage(newLanguage);
        
        // Sync all other selectors
        document.querySelectorAll('.language-dropdown, #languageSelect, #loginLanguageSelect').forEach(otherSelector => {
            if (otherSelector !== e.target && otherSelector.value !== newLanguage) {
                otherSelector.value = newLanguage;
            }
        });
        
        // Update specific page elements if needed
        if (typeof updatePlaceholder === 'function') {
            updatePlaceholder();
        }
        
        if (typeof changeMainImage === 'function') {
            const activeThumb = document.querySelector('.thumbnail.active');
            if (activeThumb) {
                const index = Array.from(document.querySelectorAll('.thumbnail')).indexOf(activeThumb);
                changeMainImage(index);
            }
        }
        
        // Update placeholder text for search inputs
        updateSearchPlaceholders();
    }

    // Update search placeholders - NEW
    function updateSearchPlaceholders() {
        const searchInputs = document.querySelectorAll('.search-input, #searchInput');
        searchInputs.forEach(input => {
            if (input.hasAttribute('data-translate-placeholder')) {
                const key = input.getAttribute('data-translate-placeholder');
                if (translations[currentLanguage] && translations[currentLanguage][key]) {
                    input.placeholder = translations[currentLanguage][key];
                }
            }
        });
    }

    // Connect wallet button
    const connectBtn = document.querySelector('.connect-wallet');
    if (connectBtn && !connectBtn.hasAttribute('data-listener-added')) {
        connectBtn.addEventListener('click', connectWallet);
        connectBtn.setAttribute('data-listener-added', 'true');
    }

    // Investment amount input (property detail page)
    const investmentAmountInput = document.getElementById('investmentAmount');
    if (investmentAmountInput) {
        investmentAmountInput.addEventListener('input', updateInvestmentSummary);
        updateInvestmentSummary(); // Initialize
    }

    // Admin form submission
    const addPropertyBtn = document.getElementById('addPropertyBtn');
    if (addPropertyBtn) {
        addPropertyBtn.addEventListener('click', addNewProperty);
    }

    const distributeBtn = document.getElementById('distributeBtn');
    if (distributeBtn) {
        distributeBtn.addEventListener('click', distributeRentals);
    }

    // Setup newsletter form
    setupNewsletterForm();

    // Form validation for all forms - NEW
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', function(e) {
            const inputs = form.querySelectorAll('input[required], textarea[required]');
            let hasError = false;
            
            inputs.forEach(input => {
                if (!validateInput(input, 'required')) {
                    input.style.borderColor = '#ef4444';
                    hasError = true;
                } else {
                    input.style.borderColor = '';
                }
            });
            
            if (hasError) {
                e.preventDefault();
                showNotification('Please fill all required fields', 'error');
            }
        });
    });

    // Smooth scroll animation for navigation
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    });

    // Intersection Observer for fade-in animations - IMPROVED
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animationDelay = Math.random() * 0.3 + 's';
                entry.target.classList.add('fade-in');
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // Observe all elements that should fade in
    document.querySelectorAll('.fade-in').forEach(el => {
        observer.observe(el);
    });

    // Header background on scroll - IMPROVED
    let lastScrollY = window.scrollY;
    
    window.addEventListener('scroll', function() {
        const header = document.querySelector('.header');
        if (header) {
            const currentScrollY = window.scrollY;
            
            if (currentScrollY > 100) {
                header.style.background = 'rgba(15, 15, 35, 0.98)';
                header.style.backdropFilter = 'blur(20px)';
            } else {
                header.style.background = 'rgba(15, 15, 35, 0.95)';
                header.style.backdropFilter = 'blur(10px)';
            }
            
            // Hide/show header on scroll
            if (currentScrollY > lastScrollY && currentScrollY > 200) {
                header.style.transform = 'translateY(-100%)';
            } else {
                header.style.transform = 'translateY(0)';
            }
            
            lastScrollY = currentScrollY;
        }
    });
    
    // Add CSS animations
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
        
        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }
        
        .header {
            transition: all 0.3s ease;
        }
        
        .fade-in {
            opacity: 0;
            transform: translateY(30px);
            transition: all 0.8s ease;
        }
    `;
    document.head.appendChild(style);
    
    console.log('‚úÖ ARSA Token JavaScript Initialized Successfully!');
});

// Utility functions - IMPROVED
function formatCurrency(amount, currency = 'EUR') {
    const locale = currentLanguage === 'ar' ? 'ar-SA' : currentLanguage === 'tr' ? 'tr-TR' : 'en-US';
    return new Intl.NumberFormat(locale, {
        style: 'currency',
        currency: currency
    }).format(amount);
}

function formatDate(date) {
    const locale = currentLanguage === 'ar' ? 'ar-SA' : currentLanguage === 'tr' ? 'tr-TR' : 'en-US';
    return new Intl.DateTimeFormat(locale, {
        year: 'numeric',
        month: 'short',
        day: 'numeric'
    }).format(date);
}

function formatNumber(number) {
    const locale = currentLanguage === 'ar' ? 'ar-SA' : currentLanguage === 'tr' ? 'tr-TR' : 'en-US';
    return new Intl.NumberFormat(locale).format(number);
}

// Error handling - NEW
window.addEventListener('error', function(e) {
    console.error('JavaScript Error:', e.error);
    
    // Don't show error notifications for minor issues
    if (e.error && e.error.message && !e.error.message.includes('Script error')) {
        const errorMessages = {
            en: 'An error occurred. Please refresh the page.',
            tr: 'Bir hata olu≈ütu. L√ºtfen sayfayƒ± yenileyin.',
            ar: 'ÿ≠ÿØÿ´ ÿÆÿ∑ÿ£. Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿµŸÅÿ≠ÿ©.'
        };
        
        showNotification(errorMessages[currentLanguage] || errorMessages.en, 'error');
    }
});

// Web3 integration placeholders - IMPROVED
const Web3Integration = {
    // Arbitrum network configuration
    ARBITRUM_NETWORK: {
        chainId: '0xA4B1',
        chainName: 'Arbitrum One',
        rpcUrls: ['https://arb1.arbitrum.io/rpc'],
        nativeCurrency: {
            name: 'Ether',
            symbol: 'ETH',
            decimals: 18
        },
        blockExplorerUrls: ['https://arbiscan.io/']
    },

    // Contract addresses (placeholders)
    CONTRACTS: {
        ARSA_TOKEN: '0x0000000000000000000000000000000000000000',
        NFT_PROPERTY: '0x0000000000000000000000000000000000000000',
        RENTAL_DISTRIBUTOR: '0x0000000000000000000000000000000000000000'
    },

    // Connect to MetaMask - IMPROVED
    async connectMetaMask() {
        if (typeof window.ethereum !== 'undefined') {
            try {
                const accounts = await window.ethereum.request({
                    method: 'eth_requestAccounts'
                });
                
                if (accounts.length > 0) {
                    safeLocalStorage('set', 'wallet_connected', 'true');
                    safeLocalStorage('set', 'wallet_address', accounts[0]);
                    return accounts[0];
                }
                return null;
            } catch (error) {
                console.error('Error connecting to MetaMask:', error);
                
                const errorMessages = {
                    en: 'Failed to connect wallet. Please try again.',
                    tr: 'C√ºzdan baƒülantƒ±sƒ± ba≈üarƒ±sƒ±z. L√ºtfen tekrar deneyin.',
                    ar: 'ŸÅÿ¥ŸÑ ŸÅŸä ÿ±ÿ®ÿ∑ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©. Ÿäÿ±ÿ¨Ÿâ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖÿ±ÿ© ÿ£ÿÆÿ±Ÿâ.'
                };
                
                showNotification(errorMessages[currentLanguage] || errorMessages.en, 'error');
                return null;
            }
        } else {
            const installMessages = {
                en: 'Please install MetaMask to connect your wallet!',
                tr: 'C√ºzdanƒ±nƒ±zƒ± baƒülamak i√ßin l√ºtfen MetaMask y√ºkleyin!',
                ar: 'Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ´ÿ®Ÿäÿ™ MetaMask ŸÑÿ±ÿ®ÿ∑ ŸÖÿ≠ŸÅÿ∏ÿ™ŸÉ!'
            };
            
            showNotification(installMessages[currentLanguage] || installMessages.en, 'error');
            
            // Redirect to MetaMask website
            setTimeout(() => {
                window.open('https://metamask.io/', '_blank');
            }, 2000);
            
            return null;
        }
    },

    // Switch to Arbitrum network
    async switchToArbitrum() {
        try {
            await window.ethereum.request({
                method: 'wallet_switchEthereumChain',
                params: [{ chainId: this.ARBITRUM_NETWORK.chainId }],
            });
            return true;
        } catch (switchError) {
            // Network not added to MetaMask
            if (switchError.code === 4902) {
                try {
                    await window.ethereum.request({
                        method: 'wallet_addEthereumChain',
                        params: [this.ARBITRUM_NETWORK],
                    });
                    return true;
                } catch (addError) {
                    console.error('Error adding Arbitrum network:', addError);
                    return false;
                }
            }
            console.error('Error switching to Arbitrum:', switchError);
            return false;
        }
    },

    // Buy NFT function (placeholder)
    async buyNFT(propertyId, nftCount) {
        console.log(`Buying ${nftCount} NFTs for property ${propertyId}`);
        // Will implement actual smart contract interaction
        
        const simulatedTx = {
            hash: '0x' + Math.random().toString(16).substr(2, 64),
            propertyId,
            nftCount,
            timestamp: Date.now()
        };
        
        // Store transaction in local storage for demo
        const transactions = JSON.parse(safeLocalStorage('get', 'transactions') || '[]');
        transactions.push(simulatedTx);
        safeLocalStorage('set', 'transactions', JSON.stringify(transactions));
        
        return simulatedTx;
    },

    // Check ARSA token balance
    async getARSABalance(address) {
        console.log(`Getting ARSA balance for ${address}`);
        // Will implement actual token balance check
        return Math.floor(Math.random() * 10000) + 1000; // Placeholder random balance
    },

    // Get transaction history
    getTransactionHistory() {
        return JSON.parse(safeLocalStorage('get', 'transactions') || '[]');
    }
};

// Export for use in other files
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        translations,
        translatePage,
        connectWallet,
        Web3Integration,
        safeLocalStorage,
        validateInput,
        showNotification,
        formatCurrency,
        formatDate
    };
}